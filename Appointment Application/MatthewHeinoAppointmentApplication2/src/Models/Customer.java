package Models;
import java.sql.Date;
import java.sql.Timestamp;

/** Class that will model customer data.
 *
 * @author Matthew Heino
 */
public class Customer {
    
    /** Customer's ID number */
    private int customerID;
    
    /** Customer's name */
    private String customerName;
    
    /** Customer's address */
    private String address;
    
    /** Customer's postal code */
    private String postalCode;
    
    /** Customer's phone */
    private String phone;
    
    /** Customer's division ID  */
    private int divisionID;
    
    /** Customer's division */
    private String division;
    
    /** Customer's country ID */
    private int countryID;
    
    /** Customer's country */
    private String country;

    /** Default constructor of the Customer class.
     * 
     */
    public Customer() {
    }

    /** Explicit value constructor of the Customer class.
     * 
     * @param customerID customer's ID (generated by the database)
     * @param customerName customer's name
     * @param address customer's address
     * @param postalCode customer's postal code
     * @param phone customer's phone
     * @param divisionID customer's division ID
     * @param division customer division 
     * @param countryID customer's country ID
     * @param country  customer's country
     * 
     */
    public Customer(int customerID, String customerName, String address, 
            String postalCode, String phone, int divisionID, String division, 
            int countryID, String country) 
    {
        this.customerID = customerID;
        this.customerName = customerName;
        this.address = address;
        this.postalCode = postalCode;
        this.phone = phone;
        this.divisionID = divisionID;
        this.division = division;
        this.countryID = countryID;
        this.country = country;
    }

    /** Method to get the CustomerID. Method to retrieve the customer's ID.  No 
     *  other information will be returned.
     * 
     * @return customer's ID
     * 
     */
    public int getCustomerID() {
        return customerID;
    }

    /** Method to set the Customer ID.  Method will set the customer's ID. No 
     *  other information will be changed.
     * 
     * @param customerID customer's ID
     * 
     */
    public void setCustomerID(int customerID) {
        this.customerID = customerID;
    }
    
    /** Method to get the Customer name. Method to retrieve the customer's name.  
     *  The name will be String.
     * 
     * @return  customer's name
     * 
     */
    public String getCustomerName() {
        return customerName;
    }

    /** Method to set the Customer Name.
     * 
     * @param customerName customer's name
     * 
     */
    public void setCustomerName(String customerName) {
        this.customerName = customerName;
    }

    /** Method to get the address of the customer. Method to return the address 
     *  of the customer.  The address will be returned as a String.
     * 
     * @return customer's address
     * 
     */
    public String getAddress() {
        return address;
    }

    /**Method to set the address of the Customer.
     * 
     * @param address customer's address
     * 
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /** Method to get the postal code of the user.  Method to retrieve the 
     *  postal code of the customer. The postal code of the Customer will be 
     *  returned as a String.
     * 
     * @return customer's postal code
     * 
     */
    public String getPostalCode() {
        return postalCode;
    }

    /** Method to set the postal code of the customer.
     * 
     * @param postalCode customer's postal code
     * 
     */
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    /** Method to get the phone of the customer. Method to retrieve the 
     *  customer's phone.  The phone will be returned as a String.  
     * 
     * @return customer's phone
     * 
     */
    public String getPhone() {
        return phone;
    }

    /**Method to set the phone of the customer.
     * 
     * @param phone customer's phone
     * 
     */
    public void setPhone(String phone) {
        this.phone = phone;
    }

    /** Method to get the division ID of the Customer. Method to retrieve the 
     *  division ID of the Customer. The division ID will be an int.
     * 
     * @return customer's division ID
     * 
     */
    public int getDivisionID() {
        return divisionID;
    }

    /** Method to set the division ID of the Customer.
     * 
     * @param divisionID customer's division ID
     * 
     */
    public void setDivisionID(int divisionID) {
        this.divisionID = divisionID;
    }

    /** Method to get the division of the customer. Method to get the division 
     *  of the customer.  The division is returned as a String.  
     * 
     * @return customer's division
     * 
     */
    public String getDivision() {
        return division;
    }

    /** Method to set the division of the customer.
     * 
     * @param division customer's division
     * 
     */
    public void setDivision(String division) {
        this.division = division;
    }

    /** Method to get the country ID. Method to return the country ID that is 
     *  associated with the customer.
     * 
     * @return customer's country ID
     * 
     */
    public int getCountryID() {
        return countryID;
    }

    /** Method to set the Country ID.
     * 
     * @param countryID customer's country ID
     * 
     */
    public void setCountryID(int countryID) {
        this.countryID = countryID;
    }

    /** Method to get the country(Name). Method to get the name of the country 
     *  that is associated with the customer. 
     * 
     * @return customer's country
     * 
     */
    public String getCountry() {
        return country;
    }

    /** Method to set the country(name).
     * 
     * @param country customer's country
     * 
     */
    public void setCountry(String country) {
        this.country = country;
    }

    /** Method to check to see if the information is valid. Method to make sure 
     *  that all fields that compose a customer are filled out. 
     * 
     * @param username  user name 
     * @param addr    address
     * @param postalcode postal code
     * @param phone phone
     * @param divisionID division ID
     * @return  error message string
     * 
     */
    public String isValid(String username, String addr, String postalcode, 
            String phone, int divisionID)
    {
            String errorMessage = "";
            
            if(username.isEmpty() ){
                    
                errorMessage = errorMessage + "The Username is blank. Please fill in. ";
            } 
            if(addr.isEmpty()){
                
                errorMessage = errorMessage + "\nThe address is blank. Please fill in. ";
            } 
            if(postalcode.isEmpty())
            {
                errorMessage = errorMessage + "\nThe postal code is blank. Please fill in. ";
                
            }
            if(phone.isEmpty()){
                
                errorMessage = errorMessage + "\nPhone is empty. Please fill in."; 
            }
            
            if(divisionID == 0){
                
                errorMessage = errorMessage + "\nDivison is not selected.  "
                        + "Please choose a division.";
            
            }
    
            return errorMessage;
            
    }// end isValid.
    
    @Override
    public String toString() {
        return  customerID + " " + customerName ;
    }
 
}// end customer.
